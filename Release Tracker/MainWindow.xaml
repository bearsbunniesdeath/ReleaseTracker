<metro:MetroWindow x:Class="MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Release_Tracker"       
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:metro="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:cmd="http://www.galasoft.ch/mvvmlight"
        mc:Ignorable="d"
        Title="{Binding Path=AppVersion}" Height="400" Width="600" EnableDWMDropShadow="True">
    <Window.DataContext>
        <local:MainWindowViewModel />
    </Window.DataContext>
    <DockPanel>
        <DockPanel DockPanel.Dock="Right" LastChildFill="False">
            <StackPanel DockPanel.Dock="Top" MinWidth="100" Margin="5">
                <local:IconicButton Icon="Plus" Caption="Add..." Margin="0,0,0,5" Command="{Binding Path=Add}"/>
                <local:IconicButton Icon="Pencil" Caption="Edit..." Margin="0,0,0,5" Command="{Binding Path=Edit}"/>
                <local:IconicButton Icon="Trash" Caption="Delete" Command="{Binding Path=Delete}"/>
            </StackPanel>
            <GroupBox DockPanel.Dock="Top" Header="Filter">
                <StackPanel>
                    <StackPanel.Resources>
                        <local:EnumFlagsToBooleanConverter x:Key="EnumFlagsToBooleanConverter"/>
                        <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}" x:Key="FilterCheckBox">
                            <Style.Setters>
                                <Setter Property="Command" Value="{Binding RefreshView}"/>
                            </Style.Setters>
                        </Style>
                        <Style TargetType="CheckBox" BasedOn="{StaticResource FilterCheckBox}" x:Key="ExclusiveFilterCheckBox">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=_allCheckBox, Path=IsChecked}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Resources>
                    <CheckBox Name="_allCheckBox" IsChecked="{Binding Path=SelectedFilterType, Converter={StaticResource EnumFlagsToBooleanConverter}, ConverterParameter={x:Static local:Globals+gReleaseFilter.All}}"
                              Style="{StaticResource FilterCheckBox}" Margin="5,5,5,10">
                        All                       
                    </CheckBox>
                    <CheckBox IsChecked="{Binding Path=SelectedFilterType, Converter={StaticResource EnumFlagsToBooleanConverter}, ConverterParameter={x:Static local:Globals+gReleaseFilter.Games}}"
                              Style="{StaticResource ExclusiveFilterCheckBox}" Margin="5,0,5,5">
                        Games                       
                    </CheckBox>
                    <CheckBox IsChecked="{Binding Path=SelectedFilterType, Converter={StaticResource EnumFlagsToBooleanConverter}, ConverterParameter={x:Static local:Globals+gReleaseFilter.Movies}}"
                              Style="{StaticResource ExclusiveFilterCheckBox}" Margin="5,0,5,5">
                        Movies
                    </CheckBox>
                    <CheckBox IsChecked="{Binding Path=SelectedFilterType, Converter={StaticResource EnumFlagsToBooleanConverter}, ConverterParameter={x:Static local:Globals+gReleaseFilter.Music}}"
                              Style="{StaticResource ExclusiveFilterCheckBox}" Margin="5,0,5,5">
                        Music
                    </CheckBox>
                    <CheckBox IsChecked="{Binding Path=SelectedFilterType, Converter={StaticResource EnumFlagsToBooleanConverter}, ConverterParameter={x:Static local:Globals+gReleaseFilter.TV}}"
                              Style="{StaticResource ExclusiveFilterCheckBox}" Margin="5,0,5,5">
                        TV
                    </CheckBox>
                </StackPanel>
            </GroupBox>
            <local:IconicButton DockPanel.Dock="Bottom" Icon="Close" Caption="Close" Command="{Binding Path=CloseApp}"  MinWidth="100" Margin="5"/>
        </DockPanel>
        <DataGrid ItemsSource="{Binding ReleaseView}" SelectedItem="{Binding Path=SelectedRow, Mode=TwoWay}" IsReadOnly="True" SelectionMode="Single" AutoGenerateColumns="False">
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding State}" Value="Red">
                            <Setter Property="Background" Value="Crimson"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding State}" Value="Yellow">
                            <Setter Property="Background" Value="Yellow"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding State}" Value="Green">
                            <Setter Property="Background" Value="LightGreen"></Setter>
                        </DataTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Name" Binding="{Binding Name}"/>
                <DataGridTextColumn Header="Type" Binding="{Binding Type}"/>
                <DataGridTextColumn Header="Release Date" Binding="{Binding ReleaseDate}"/>
                <DataGridTextColumn Header="Days Left" Binding="{Binding CountdownString}"/>
            </DataGrid.Columns>
        </DataGrid>
    </DockPanel>
</metro:MetroWindow>
